#!/bin/bash

set -e

function javaProcsFor() {
  local filter="$1"

  if [ -n "$filter" ]; then
    ps -eo pid,command | grep [j]ava | GREP_COLOR="01;35" grep -e "$filter" --color=always
  else
    ps -eo pid,command | grep [j]ava
  fi
}

function colorpids() {
  GREP_COLOR="01;32" grep -e "^[ ]*[0-9]\+" --color=always
}

function main() {
  local filter
  local detail
  local stopflags
  local die_asking_nicely
  local murder
  local killflag="-TERM"

  if [ $# -ne 0 ]; then
    while (( "$#" )); do
      case "$1" in
        -*)
          if [ -n "$stopflags" ]; then
            if [ -n "$filter" ]; then
              die "You can only specify 1 filter at most"
            fi
            filter="$1"
          else
            case "$1" in
              --)
                stopflags="yes"
                ;;
              -l|--long)
                detail="yes"
                ;;
              -k|--kill)
                die_asking_nicely="yes"
                ;;
              -9|--murder)
                murder="yes"
                ;;
              -h|--help)
                usage
                ;;
              *)
                usage "Unknown flag: \`$1\`"
                ;;
             esac
          fi
          shift 1
          ;;
        *)
          if [ -n "$filter" ]; then
            die "You can only specify 1 filter at most"
          fi
          filter="$1"
          shift 1
          ;;
      esac
    done
  fi

  if [ "yes" = "$die_asking_nicely" -o "yes" = "$murder" ]; then
    if [ "yes" = "$murder" ]; then
      killflag="-KILL"
    fi

    local signal="$(printf "%s" "$killflag" | sed -e 's/^-/SIG/')"

    javaProcsFor "$filter" | tee >(awk '{print $1}' | xargs kill $killflag) >(awk "{print \"\033[1;31mSent $signal ->\033[1;36m\", \$1, \"\033[0m\"}" >&2) | colorpids

    return
  fi

  if [ "yes" = "$detail" ]; then
    javaProcsFor "$filter" | colorpids
  else
    javaProcsFor "$filter" | awk '{print $1}' | colorpids
  fi
}

function usage() {
  local progname="$(basename $0)"
  local error="$*"

  if [ -n "$error" ]; then
    warn "\n$error\n"
  else
    warn "\n$progname: A utility to list, filter by pattern, and terminate Java process IDs (PIDs).\n"
  fi

  die "Usage:\n\n  $progname [-l||--long] [-k|--kill] [-9|--murder] [-h|--help] [pattern]\n"
}

function warn() {
  printf "$*\n" >&2
}

function die() {
  warn $*
  exit 1
}

main $@
